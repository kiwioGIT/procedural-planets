[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;

vec2 ray_sphere_intersect(vec3 ray_pos, vec3 ray_dir,vec3 sphere_pos,float sphere_radius){
	vec3 mid_point = ray_dir*dot(sphere_pos-ray_pos,ray_dir);
	if (length(mid_point-sphere_pos)<sphere_radius){
		return vec2(1.0,0.0);
	}
	else return vec2(0.0,0.0);
}

void fragment(){
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;
	ALBEDO = vec3(linear_depth);
}"
